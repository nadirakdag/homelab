version: "3.9"

networks:
  default:
    driver: bridge
  traefik_proxy:
    name: traefik_proxy
    driver: bridge

services:

# =============================================================
#
#	traefik - reverse proxy
#
# =============================================================

  traefik:
      image: traefik:latest
      logging:
        driver: json-file
      command:
        # - "--log.level=DEBUG"
        - "--api.dashboard=true"
        - "--api.insecure=true"
        - "--providers.docker=true"
        - "--providers.docker.exposedbydefault=false"
        - "--entrypoints.web.address=:80"
        - --providers.docker.network=traefik_proxy
        - --providers.docker.swarmMode=false
        - --metrics.prometheus=true
        - --metrics.prometheus.buckets=0.100000, 0.300000, 1.200000, 5.000000
        - --metrics.prometheus.addEntryPointsLabels=true
        - --metrics.prometheus.addServicesLabels=true
        - --entryPoints.metrics.address=:8899
        - --metrics.prometheus.entryPoint=metrics
      container_name: traefik    
      environment:
        - PUID=1000
        - PGID=1000
        - TZ=Europe/Istanbul  
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.api.rule=Host(`traefik.${DOMAIN}`)"
        - "traefik.http.routers.api.service=api@internal"
        # Add at least an authentication middleware basic or OAuth for a better security
      ports:
        - 80:80
        - 443:443
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock:ro  # So that Traefik can listen to the Docker events
      restart: always
      networks:
        - traefik_proxy
        - default


# =============================================================
#
#	WHOAMI - test webserver
#
# =============================================================

  whoami:
    image: containous/whoami
    container_name: whoami    
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Istanbul
    logging:
      driver: json-file
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.${DOMAIN}`)"
    networks:
      - traefik_proxy

# =============================================================
#
#	Homarr - dashboard
#
# =============================================================

  homarr:
    container_name: homarr
    image: ghcr.io/ajnart/homarr:latest
    restart: unless-stopped    
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Istanbul
    logging:
      driver: json-file
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # Optional, only if you want docker integration
      - /mnt/config/homarr/configs:/app/data/configs
      - /mnt/config/homarr/icons:/app/public/icons
      - /mnt/config/homarr/data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.homarr.rule=Host(`dashboard.${DOMAIN}`)"
    networks:
      - traefik_proxy

# =============================================================
#
#	deluge - torrent downlader
#
# =============================================================

  deluge:
    image: lscr.io/linuxserver/deluge:latest
    container_name: deluge
    logging:
      driver: json-file
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Istanbul
    volumes:
      - /mnt/downloads:/downloads
      - /mnt/config/deluge:/config
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.deluge.rule=Host(`deluge.${DOMAIN}`)"
      - "traefik.http.services.deluge.loadbalancer.server.port=8112"
    networks:
      - traefik_proxy

# =============================================================
#
#	sonarr - tv show tracker
#
# =============================================================

  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    logging:
      driver: json-file
    environment:
      - TZ=Europe/Istanbul # Specify a timezone to use
      - PUID=1000 # User ID to run as
      - PGID=1000 # Group ID to run as
    volumes:
      - /mnt/tv-shows:/data # Location of all your media
      - /mnt/config/sonarr:/config
      - /mnt/downloads:/downloads
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.${DOMAIN}`)"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
    networks:
      - traefik_proxy

# =============================================================
#
#	prowlarr - indexer
#
# =============================================================

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/Istanbul
    restart: unless-stopped
    volumes:
      - /mnt/config/prowlarr:/config
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.${DOMAIN}`)"
      - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"
    networks:
      - traefik_proxy
    logging:
      driver: json-file

# =============================================================
#
#	jellyfin - streamer
#
# =============================================================

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/Istanbul
      #- JELLYFIN_PublishedServerUrl=192.168.0.5 #optional
    volumes:
      - /mnt/tv-shows:/data/tv-shows
      - /mnt/config/jellyfin:/config
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyfin.rule=Host(`jellyfin.${DOMAIN}`)"
      - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"
    networks:
      - traefik_proxy
    logging:
      driver: json-file


# =============================================================
#
#	speedtest - network speed tool
#
# =============================================================

  speedtest:
    container_name: speedtest
    image: miguelndecarvalho/speedtest-exporter:latest
    networks:
      - traefik_proxy
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.speedtest.rule=Host(`speedtest.${DOMAIN}`)"
      - "traefik.http.services.speedtest.loadbalancer.server.port=9798"
    logging:
      driver: json-file
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Istanbul

# =============================================================
#
#	prometheus - monitoring
#
# =============================================================

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: unless-stopped
    volumes:
      - /mnt/config/prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.${DOMAIN}`)"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
    logging:
      driver: json-file
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Istanbul
    links:
      - ping:ping
      - speedtest:speedtest
    networks:
      - traefik_proxy

# =============================================================
#
#	graphana - monitoring dashboard
#
# =============================================================

  grafana:
    container_name: grafana
    image: grafana/grafana
    restart: unless-stopped
    volumes:
      - /mnt/config/grafana/provisioning/:/etc/grafana/provisioning/
    depends_on:
      - prometheus
    env_file:
      - /mnt/config/grafana/config.monitoring
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.${DOMAIN}`)"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    logging:
      driver: json-file
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Istanbul

# =============================================================
#
#	blackbox - ping tool
#
# =============================================================

  ping:
    container_name: ping
    image: prom/blackbox-exporter
    restart: unless-stopped
    command:
      - '--config.file=/config/blackbox.yml'
    networks:
      - traefik_proxy
    volumes:
      - /mnt/config/blackbox/config:/config
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.blackbox.rule=Host(`blackbox.${DOMAIN}`)"
      - "traefik.http.services.blackbox.loadbalancer.server.port=9115"
    logging:
      driver: json-file
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Istanbul